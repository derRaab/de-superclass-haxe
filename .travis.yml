language: haxe

# TravisCI by default run on linux.
# Let's enable both linux and mac builds because why not?
os:
  - linux
  - osx

# Let's use OSX 10.10, which is the oldest version that homebrew provides bottles for.
# https://docs.travis-ci.com/user/osx-ci-environment/
osx_image: xcode6.4

# Let's use Ubuntu Trusty instead of Precise.
dist: trusty

# Test with Haxe 3.4.2 and Haxe development.
haxe:
  - "3.4.2"
  - development

matrix:
  # Allow Haxe development to fail.
  allow_failures:
    - haxe: development

addons:
  # This is the preferred way to install apt packages.
  # However, it only allow some but not all packages.
  # Alternatively, we can use `sudo apt-get install ...` in the `install:` section.
  # http://docs.travis-ci.com/user/apt/#Adding-APT-Packages
  apt:
    packages:
      # C++ (for rebuilding hxcpp)
      - gcc-multilib
      - g++-multilib
      # Python
      - python3
      # PHP
      - php5-cli
      # C#
      - mono-devel
      - mono-mcs
      # Flash
      - libglib2.0
      - libfreetype6

install:
  # os-specific config
  - if [ "${TRAVIS_OS_NAME}" = "linux" ]; then
      export DISPLAY=:99.0;
      export AUDIODEV=null;
    elif [ "${TRAVIS_OS_NAME}" = "osx" ]; then
      brew uninstall --force brew-cask;
      brew update;
      brew install mono;
      brew install phantomjs;
      brew install python3;
    fi
  # Download and setup a standalone flash player debugger
  - haxe flash/install.hxml
  # Install haxelibs
  - if [ "${TRAVIS_HAXE_VERSION}" = "development" ]; then
      haxelib git hxcpp https://github.com/HaxeFoundation/hxcpp.git;
      pushd $(haxelib path hxcpp | head -1);
        pushd tools/hxcpp; haxe compile.hxml; popd;
        pushd project; neko build.n; popd;
      popd;
    else
      haxelib install hxcpp;
    fi
  - haxelib install hxjava
  - haxelib install hxcs
  - haxelib list

script:
  - haxe build-interp.hxml
  - haxe build-neko.hxml         && neko bin/HelloWorld.n
  - haxe build-js.hxml           && node bin/HelloWorld.js
#                                 && haxe phantomjs/run.hxml bin/HelloWorld.js
  - haxe build-java.hxml         && java -jar bin/HelloWorld.jar
  - haxe build-php.hxml          && php bin/index.php
  - haxe build-cs.hxml           && mono bin/bin/HelloWorld.exe
  - haxe build-flash.hxml -D fdb && haxe flash/run.hxml bin/HelloWorld.swf
  - haxe build-cpp.hxml          && ./bin/HelloWorld
  - haxe build-python.hxml       && python3 bin/HelloWorld.py